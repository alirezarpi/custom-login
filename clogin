#!/bin/bash
# Author: Alirezarpi
# Should run as root
# Note: You should edit the getty.target.wants/getty@tty1.service -> add " --autologin root " to ExecStart like this:
# 			ExecStart=-/sbin/agetty --autologin root --noclear %I $TERM
# When you're editing this don't forget to change the sizes
# Put the dialogrc file in /etc/ folder

if [[ "$USER" != "root" ]]; then
		echo "Run as root"
		exit 1
fi

checkdialog=$(ls /usr/bin/ | grep "^dialog$")
if [[ "$checkdialog" == "" ]]; then
		echo "You should have <dialog> program, you can install it with apt or ..."
		exit 1
fi

emt=$(systemctl get-default)
if [[ "$emt" != "multi-user.target" ]]; then
 		echo "Setting the default runlevel to 3 ..."
 		systemctl set-default multi-user.target	2>/dev/null
		sleep 0.5 # makes script cooler :))
fi

passdd=$(ls /etc/ | grep ar-config)
if [[ "$passdd" == "" ]]; then
		echo "Copying clogin to /usr/bin ..."
		cp clogin /usr/bin 2>/dev/null
		checkar=$(cat /root/.bashrc | grep "clogin")
        if [[ "$checkar" == "" ]]; then
				echo "clogin" >> /root/.bashrc # added to end of .bashrc
		fi
		echo "\033[33mDon't forget to copy dialogrc file to /etc/ folder\033[00m"
		sleep 0.1
		echo -e "    \033[32m+-------------------------+\033[00m"
		echo -e "    \033[32m-\033[00m \033[1;36mWelcome to Custom-Login\033[00m \033[32m-\033[00m"
		echo -e "    \033[32m+-------------------------+\033[00m"
		sleep 1
		echo -e "Please enter the password: \c"
		read -s password1 
		echo
		echo -e "Please confirm the password: \c"
		read -s password2
		echo
		if [[ "$password1" == "$password2" ]]; then # Compare two given passwords
				mkdir /etc/ar-config 2>/dev/null
				passwordhashed=$(echo $password1 | base64 ) # hash the password
				echo $passwordhashed | gpg --passphrase $password1 -c --no-use-agent > /etc/ar-config/ar-shadow # encrypt
				echo "Password hashed and added to encrypted shadow file"
		else
				echo "Passwords does not match try again"
				exit 1
		fi
		echo -e "\033[32mOperation successfull\033[00m"
		echo -e "\033[33mRemember to edit the /etc/systemd/system/getty.target.wants/getty@tty1.service -> add '--autologin root' to ExecStart like this:\n \
\033[32mExecStart=-/sbin/agetty \033[1;35m--autologin root\033[00m \033[32m--noclear %I \$TERM\033[00m"
		exit 0
fi

# If you're using --colors arg
#    0  through  7  are  the  ANSI  color numbers used in curses:
# black, red, green, yellow, blue, magenta, cyan and white re‐
# spectively.
#    Bold is set by 'b', reset by 'B'.
#    Reverse is set by 'r', reset by 'R'.
#    Underline is set by 'u', reset by 'U'.
#    The  settings  are cumulative, e.g., "\Zb\Z1" makes the fol‐
# lowing text bold (perhaps bright) red.
#    Restore normal settings with "\Zn".

title='\Z1CAUTION: \Z3If you are not \Z6Alireza\Z3... \Z2Back off ^_^ ' # you can change the back title 
try='0'
trap '' INT TSTP # this cancels Ctrl-C and Ctrl-Z
while true; do
		gpassword=$(dialog --nocancel --insecure --colors --ok-label "Login" --backtitle "$title" \
        --passwordbox "\Z6- Enter the \Zb\Z1password\ZB \Z6to login:\n\Z7" 9 50 3>&1 1>&2 2>&3) # get password
		ggpassword=$(echo $gpassword | base64) # hash the password 
		ghashed=$(cat /etc/ar-config/ar-shadow | gpg --passphrase $gpassword -d --no-use-agent 2>/dev/null) # real hashed password ;)
		if [[ "$ggpassword" == "$ghashed" ]]; then # compare
   		        dialog --sleep 1 --colors --nook --infobox "\Z2\ZbWelcome \Z6Alireza" 3 19 # welcome infobox
				break
		fi
        if [[ "$ggpassword" != "$ghashed" && "$gpassword" != "" ]]; then # Invalid password
            	(( try ++ ))
		    	dialog --sleep 1 --colors --nook --backtitle "Make it three to \Z1shutdown\Zn baby ;)" --infobox "\Z1Invalid Password " 3 21
        fi
        if [[ "$gpassword" == "" ]]; then # Emty password
		        dialog --sleep 1 --colors --nook --infobox "\Z2Empty Password" 3 19
        fi
		if [[ "$try" == "3" ]]; then # Shutdown after 3 invalid passwords
   		        dialog --sleep 1 --colors --nook --infobox "\Z3Shutting down the system" 3 30
				systemctl poweroff
		fi
        sleep 0.1
done
trap 2 # Enable Ctrl-C and Ctrl-Z

checkgp=$(systemctl status graphical.target | grep " active")
if [[ "$checkgp" == "" ]]; then
		systemctl start graphical.target # start the X server
fi
tput clear
exit 0